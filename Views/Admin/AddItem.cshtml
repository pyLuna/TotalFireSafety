@using Capstone_TFSTI.Models
@model Inventory
@{
    ViewBag.Title = "Add Item";
    Layout = "~/Views/AdminLayout.cshtml";
}

<div class="main-content">
    <header>
        <h2>
            <label for="nav-toggle">
                <span class="las la-bars"></span>
            </label>
            Inventories / Add Item
        </h2>
    </header>

    <main>
        @*<input type="text" id="barcode-input" style="display:none;">*@
        <div class="inventory-add-container">
            <div class="inventory-form-container">
                <form action="" id="addForm" method="post">
                    <div class="details personal">
                        <div class="inventory-form-header">
                            ITEM DETAILS
                        </div>
                        <div class="inventory-form-contents">
                            <div class="fields">
                                <div class="input-field">
                                    <label>Item ID</label>
                                    <input type="text" placeholder="ABC-DEF-HIJ" id="codeField" name="in_code">
                                </div>

                                <div class="input-field">
                                    <label>Item Name</label>
                                    <input type="text" placeholder="Enter item name" id="itemName" name="in_name" required readonly>
                                </div>

                                <div class="input-field">
                                    <label>Category</label>
                                    <select id="cat-select" name="in_category" readonly>
                                        <option disabled selected>Category</option>
                                        <option value="Fittings">Fittings</option>
                                        <option value="Gate Valves">Gate Valves</option>
                                        <option value="Power Tools">Power Tools</option>
                                        <option value="Fire Extinguisher">Fire Extinguisher</option>
                                        <option value="Scaffolding">Scaffolding</option>
                                    </select>
                                </div>

                                <div class="input-field">
                                    <label>Type</label>
                                    <select id="type-select" name="in_type" readonly>
                                        <option disabled selected>Type</option>
                                        <option value="HFC-236 F">HFC-236 F</option>
                                        <option value="Machine">Machine</option>
                                    </select>
                                </div>

                                <div class="input-field">
                                    <label>Size</label>
                                    <input type="text" placeholder="00000" id="itemSize" name="in_size" readonly >
                                </div>

                                <div class="input-field">
                                    <label>Quantity</label>
                                    <input type="text" placeholder="0" name="in_quantity" id="itemQuant" required >
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-add-btns">
                        <button class="save" onclick="infoOpenPopup()" id="saveBtn">
                            <span class="btnText">Save</span>
                            <i class="las la-check-square"></i>
                        </button>

                        <button class="cancel" id="canBtn">
                            <span class="btnText" onclick="canOpenPopup()">Cancel</span>
                            <i class="las la-window-close"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <div class="info-pop-container" id="info-popup">
            <img src="~/Content/images/information.png">
            <h2>System Warning!</h2>
            <p>Do you want to save the item on the list?</p>
            <button type="submit" form="addForm">Yes</button>
            <button type="button" onclick="infoClosePopup()">Cancel</button>
        </div>

        <div class="can-pop-container" id="can-popup">
            <img src="~/Content/images/warning.png">
            <h2>System Warning!</h2>
            <p>Are you sure you don't want to save the item on the list?</p>
            <button type="button" onclick="remOpenPopup() + canClosePopup() + resetForm()">Yes</button>
            <button type="button" onclick="canClosePopup()">Cancel</button>
        </div>

        @if (ViewBag.Response != null)
        {
            <div class="save-pop-container open-popup-show" id="popup">
                <img src="~/Content/images/tick.png">
                <h2>Added!</h2>
                <p>@ViewBag.Response</p>
                <button type="button" onclick="closePopup()">OK</button>
            </div>
        }

        <div class="rem-pop-container" id="rem-popup">
            <img src="~/Content/images/remove.png">
            <h2>Cancel!</h2>
            <p>Item details has not added in the list!</p>
            <button type="button" onclick="remClosePopup()">OK</button>
        </div>

    </main>
    <script src="~/Scripts/Inventory.js"></script>
    <script>

        let infopopup = document.getElementById("info-popup");
        let cancelBtn = document.getElementById("canBtn");
        let saveBtn = document.getElementById("saveBtn");
        let form = document.getElementById("addForm");
        let cat = document.getElementById("cat-select");
        let type = document.getElementById("type-select");
        //let barcode = document.getElementById("barcode-input");
        let code = document.getElementById("codeField");
        let prevVal = "";
        let sliced = "";

        window.onload = function () {
            GetAll();
        }

        //code.addEventListener("input", function () {
        //    prevVal = code.value;
        //});

        code.addEventListener("keydown", function (event) {
            // check if the entered key is a barcode scanner input
            if (event.which === 13 || event.keyCode === 13) {
                // retrieve the scanned value
                event.preventDefault();

                if (sliced.length == 0) {
                    sliced = code.value;
                }

                if (code.value.length != prevVal.length) {
                    if (prevVal.length != 0) {
                        var index = 0;
                        while (index <= prevVal.length) {
                            index++;
                        }
                        sliced = code.value.slice(index - 1);
                    }
                }

                if (sliced.length != 0) {
                    code.value = sliced;
                }

                prevVal = code.value;
                setField(prevVal);
            }
        });

        function resetForm() {
            for (let i = 0; i < form.elements.length; i++) {
                form.elements[i].value = "";
            }
            cat.selectedIndex = 0;
            type.selectedIndex = 0;
        }

        cancelBtn.addEventListener("click", function () {
            event.preventDefault();
        });

        saveBtn.addEventListener("click", function () {
            event.preventDefault();
        });

        function infoOpenPopup() {
            infopopup.classList.add("info-popup-show")
        }

        function infoClosePopup() {
            infopopup.classList.remove("info-popup-show")
        }

        let canpopup = document.getElementById("can-popup");

        function canOpenPopup() {
            canpopup.classList.add("can-popup-show")
        }

        function canClosePopup() {
            canpopup.classList.remove("can-popup-show")
        }

        let popup = document.getElementById("popup");

        function openPopup() {
            popup.classList.add("open-popup-show")
        }

        function closePopup() {
            popup.classList.remove("open-popup-show")
        }

        let rempopup = document.getElementById("rem-popup");

        function remOpenPopup() {
            rempopup.classList.add("rem-popup-show")
        }

        function remClosePopup() {
            rempopup.classList.remove("rem-popup-show")
        }

    </script>
