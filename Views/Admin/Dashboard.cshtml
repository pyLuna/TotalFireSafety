@using TotalFireSafety.Models
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/AdminLayout.cshtml";
    ViewBag.Dash = "active";
}

<div class="main-content">
    <header>
        <h2>
            <label for="nav-toggle">
                <span class="las la-bars"></span>
            </label>
            Overview

        </h2>

        <right>
            <h4>View Summary In:</h4>

            <button class="yr-drop-btn" onclick="yrFunction()">
                <a>
                    <span>Year</span>
                    <span class="las la-chevron-down"></span>
                </a>
            </button>
            <div class="yr-dropdown-content" id="yrDropdown">
                <a href="#">2019</a>
                <a href="#">2020</a>
                <a href="#">2021</a>
                <a href="#">2022</a>
                <a href="#">2023</a>
            </div>

            <button class="m-drop-btn" onclick="mFunction()">
                <a>
                    <span>Month</span>
                    <span class="las la-chevron-down"></span>
                </a>
            </button>
            <div class="m-dropdown-content" id="mDropdown">
                <a href="#">January</a>
                <a href="#">February</a>
                <a href="#">March</a>
                <a href="#">April</a>
                <a href="#">May</a>
                <a href="#">June</a>
                <a href="#">July</a>
                <a href="#">August</a>
                <a href="#">September</a>
                <a href="#">October</a>
                <a href="#">November</a>
                <a href="#">December</a>
            </div>

            <button class="d-drop-btn" onclick="dFunction()">
                <a>
                    <span>Day</span>
                    <span class="las la-chevron-down"></span>
                </a>
            </button>
            <div class="d-dropdown-content" id="dDropdown">
                <a href="#">01</a>
                <a href="#">02</a>
                <a href="#">03</a>
                <a href="#">04</a>
                <a href="#">05</a>
                <a href="#">06</a>
                <a href="#">07</a>
                <a href="#">08</a>
                <a href="#">09</a>
                <a href="#">10</a>
                <a href="#">11</a>
                <a href="#">12</a>
                <a href="#">13</a>
                <a href="#">14</a>
                <a href="#">15</a>
                <a href="#">16</a>
                <a href="#">17</a>
                <a href="#">18</a>
                <a href="#">19</a>
                <a href="#">20</a>
                <a href="#">21</a>
                <a href="#">22</a>
                <a href="#">23</a>
                <a href="#">24</a>
                <a href="#">25</a>
                <a href="#">26</a>
                <a href="#">27</a>
                <a href="#">28</a>
                <a href="#">29</a>
                <a href="#">30</a>
                <a href="#">31</a>
            </div>

        </right>
    </header>

    <main>

        <div class="summary">
            <center>
                <div class="summary-title">
                    <b>
                        Total Fire Safety Technologies Inc. Performance
                    </b>
                </div>

                <div class="sum-chart-card">
                    <div class="sum-cards">
                        <div class="sum-card-title">
                            <div class="sum-card-single">
                                <div class="sum-card-container">
                                    <div class="sum-card-details">
                                        <div class="cicle">
                                            <div class="circle-container">
                                                <div class="inv-circle-wrap">
                                                    <div class="inv-circle">
                                                        <div class="inv-mask inv-half">
                                                            <div class="inv">

                                                            </div>
                                                        </div>

                                                        <div class="inv-mask inv-full">
                                                            <div class="inv">

                                                            </div>
                                                        </div>

                                                    </div>

                                                    <div class="inv-inside-circle">
                                                        <label id="Inventory"></label>
                                                        <script>
                                                            var inventoryCount = @ViewBag.Inventory;
                                                            document.getElementById("Inventory").textContent = inventoryCount;
                                                        </script>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <h3>INVENTORY</h3>
                                </div>
                            </div>
                        </div>

                        <div class="sum-card-title">
                            <div class="sum-card-single">
                                <div class="sum-card-container">
                                    <div class="sum-card-details">
                                        <div class="cicle">
                                            <div class="circle-container">
                                                <div class="inv-circle-wrap">
                                                    <div class="inv-circle">
                                                        <div class="inv-mask inv-half">
                                                            <div class="inv">

                                                            </div>
                                                        </div>

                                                        <div class="inv-mask inv-full">
                                                            <div class="inv">

                                                            </div>
                                                        </div>

                                                    </div>

                                                    <div class="inv-inside-circle"> 170 </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <h3>NUMBER OF PROJECTS</h3>
                                </div>
                            </div>
                        </div>




                    </div>
                </div>
            </center>
        </div>

        <div class="cards">
            <div class="card-title">
                <a href="@Url.Action("Users","Admin")">
                    <h3>Users</h3>
                    <div class="card-single">
                        <div class="card-container">
                            <h3>Employee</h3>
                            <div class="card-details">
                                <label id="dataCountLabel"></label><span>Total Employees</span>
                                <script>
                             var dataCount = @ViewBag.DataCount;
                             document.getElementById("dataCountLabel").textContent = dataCount;
                                </script>
                                <p></p>
                                <label id="dataCountLabel1" class="card-active"></label><span class="card-active">Active Employees</span>
                                <script>
                             var Active = @ViewBag.Active;
                             document.getElementById("dataCountLabel1").textContent = Active;
                                </script>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="card-title">
                <a href="@Url.Action("Requisition","Admin")">
                    <h3>Requisition</h3>
                    <div class="card-single">
                        <div class="card-container">
                            <h3>Purchase Request</h3>
                            <div class="card-details">
                                <label id="purchase"></label><span>Total Entries</span>
                                <script>
                                    var purchase = @ViewBag.Purchase;
                                    document.getElementById("purchase").textContent = purchase;
                                </script>
                                <p></p>
                                <label class="card-active" id="entries"></label><span class="card-active">New Entries</span>
                                <script>
                                    var entries = @ViewBag.Entries;
                                    document.getElementById("entries").textContent = entries;
                                </script>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="card-title">
                <a href="@Url.Action("Requisition","Admin")">
                    <h3>Deploy</h3>
                    <div class="card-single">
                        <div class="card-container">
                            <h3>Deployment Request</h3>
                            <div class="card-details">
                                <label id="deployment"></label><span>Total Entries</span>
                                <script>
                                    var deployment = @ViewBag.Deployment;
                                    document.getElementById("deployment").textContent = deployment;
                                </script>
                                <p></p>
                                <label class="card-active" id="entrieses">5</label><span class="card-active">New Entries</span>
                                <script>
                                    var entrieses = @ViewBag.Entrieses;
                                    document.getElementById("entrieses").textContent = entrieses;
                                </script>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

        </div>

        <div class="recent-grid">

            <div class="inventory-sum">
                <h3>Inventories</h3>
                <div class="card">
                    <div class="card-header">
                        <h3>Item Categories Summary</h3>

                        <select required>
                            <option disabled selected>Item Category</option>
                            <option>...</option>
                            <option>..</option>
                        </select>

                    </div>
                    <div class="chart-border">
                        <div class="chart">
                            <canvas id="barchart1" width="250" height="300"></canvas>
                            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                            <script>
                            var data = @Html.Raw(Json.Encode(ViewBag.Data));
                                var importedValues = data.map(function (item) {
                                    if (item.Category === 'Import') {
                                        if (item.Quantity < 250) {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(255,0,0)' // red color
                                            };
                                        } else if (item.Quantity < 500) {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(255, 165, 0)' // orange color
                                            };
                                        } else {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(0,128,0)' // default blue color
                                            };
                                        }
                                    } else {
                                        return { value: 0, color: 'rgba(0,128,0)' };
                                    }
                                });

                                var localValues = data.map(function (item) {
                                    if (item.Category === 'Local') {
                                        if (item.Quantity < 250) {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(255,0,0)' 
                                            };
                                        } else if (item.Quantity < 500) {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(255, 165, 0)' 
                                            };
                                        } else {
                                            return {
                                                value: item.Quantity,
                                                color: 'rgba(0,128,0)' 
                                            };
                                        }
                                    } else {
                                        return { value: 0, color: 'rgba(0,128,0)' };
                                    }
                                });

                                var labels = data.map(function (item) {
                                    return item.Name;
                                });

                                var ctx = document.getElementById('barchart1').getContext('2d');
                                var chart = new Chart(ctx, {
                                    type: 'bar',
                                    data: {
                                        labels: labels,
                                        datasets: [{
                                            label: 'Import',
                                            data: importedValues.map(function (item) { return item.value; }),
                                            backgroundColor: importedValues.map(function (item) { return item.color; }),
                                            borderColor: 'rgba(54, 162, 235, 1)',
                                            borderWidth: 1
                                        }, {
                                            label: 'Local',
                                            data: localValues.map(function (item) { return item.value; }),
                                            backgroundColor: localValues.map(function (item) { return item.color; }),
                                            borderColor: 'rgba(255, 99, 132, 1)',
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        responsive: true,
                                        maintainAspectRatio: false,
                                        aspectRatio: 4 / 4,
                                        scales: {
                                            yAxes: [{
                                                ticks: {
                                                    beginAtZero: true
                                                }
                                            }]
                                        }
                                    }
                                });



                            </script>

                        </div>
                    </div>

                    <div class="card-headers">
                        <a href="@Url.Action("Inventory","Admin")"><button> See more <span class="las la-arrow-right"></span></button></a>
                    </div>
                </div>
            </div>

            <div class="inventory-sum">
                <h3>&nbsp;</h3>
                <div class="card">
                    <div class="card-header">
                        <h3>Most Requested Item</h3>
                    </div>

                    <div class="chart-borders">
                        <div class="chart">
                            <div class="scatter">
                                <canvas id="barcharthori1" width="auto" height="auto"></canvas>

                                <script>
                                     var data = @Html.Raw(Json.Encode(ViewBag.Data));
                                    var labels = data.map(function (item) {
                                        return item.Name;
                                    });

                                    var values = data.map(function (item) {
                                        return item.Quantity;
                                    });


                                    var ctx = document.getElementById('barcharthori1').getContext('2d');
                                    var chart = new Chart(ctx, {
                                        type: 'bar',
                                        data: {
                                            labels: labels,
                                            datasets: [{
                                                label: 'Quantity',

                                                data: values,
                                                backgroundColor: 'rgba(37,109,133)',
                                                borderColor: 'rgba(54, 162, 235, 1)',
                                                borderWidth: 1
                                            }]
                                        },
                                        options: {
                                            indexAxis: 'y',
                                            responsive: true,
                                            maintainAspectRatio: false,
                                            aspectRatio: 4 / 3,
                                            scales: {
                                                yAxes: [{
                                                    ticks: {
                                                        beginAtZero: true
                                                    }
                                                }]
                                            }
                                        }
                                    });
                                </script>
                            </div>

                        </div>
                    </div>

                </div>
            </div>


        </div>

    </main>
</div>

@*<script src="../js/chart1.js"></script>
<script src="../js/chart3.js"></script>*@
@Scripts.Render("~/script/admin")

<script>
    `use strict`;
    //function refreshTime() {
    //    const timeDisplay = document.getElementById("dt");
    //    const dateString = new Date().toLocaleString();
    //    const formattedString = dateString.replace(", ", " - ");
    //    timeDisplay.textContent = formattedString;
    //}
    //setInterval(refreshTime, 0);


    var dropdown = document.getElementsByClassName("oper-dropdown-bt");
    var i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }

    /* When the user clicks on the button,
       toggle between hiding and showing the dropdown content */
    function yrFunction() {
        document.getElementById("yrDropdown").classList.toggle("yr-show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (e) {
        if (!e.target.matches('.yr-drop-btn')) {
            var myDropdown = document.getElementById("yrDropdown");
            if (myDropdown.classList.contains('yr-show')) {
                myDropdown.classList.remove('yr-show');
            }
        }
    }

    /* When the user clicks on the button,
        toggle between hiding and showing the dropdown content */
    function mFunction() {
        document.getElementById("mDropdown").classList.toggle("m-show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (e) {
        if (!e.target.matches('.m-drop-btn')) {
            var myDropdown = document.getElementById("mDropdown");
            if (myDropdown.classList.contains('m-show')) {
                myDropdown.classList.remove('m-show');
            }
        }
    }

    /* When the user clicks on the button,
       toggle between hiding and showing the dropdown content */
    function dFunction() {
        document.getElementById("dDropdown").classList.toggle("d-show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (e) {
        if (!e.target.matches('.d-drop-btn')) {
            var myDropdown = document.getElementById("dDropdown");
            if (myDropdown.classList.contains('d-show')) {
                myDropdown.classList.remove('d-show');
            }
        }
    }

</script>
