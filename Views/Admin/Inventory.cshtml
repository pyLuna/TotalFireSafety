@using TotalFireSafety.Models
@model Inventory
@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/AdminLayout.cshtml";
    ViewBag.Inv = "active";
}
<script src='@Url.Content("~/Scripts/validations/InventoryValidation.js")'></script>
<div class="main-content">
    <header>
        <h2>
            <label for="nav-toggle">
                <span class="las la-bars"></span>
            </label>
            Inventories
        </h2>
    </header>

    <main>

        <div class="upper-section">
            <div class="search-wrapper">
                <span class="las la-search"></span>
                <input type="text" placeholder="Search here" onkeyup="SearchItem(this.value)">
            </div>
            &nbsp;
            <select id="selcat" onchange="SortByCategory(this.value)">
                <option disabled selected>Select Category</option>
                <option>Fittings</option>
                <option>Gate Valves</option>
                <option>Power Tools</option>
                <option>Fire Extinguisher</option>
                <option>Scaffolding</option>
                <option>Others</option>
                <option>Clear</option>
            </select>
        </div>

        <div class="inventory-grid">
            <div class="inventory-header" id="tableTitle">
                <h3>INVENTORY ITEMS</h3>
                <div class="inventory-buttons-style" id="hideBtn">

                    @*<button class="add-btn" title="ADD NEW ITEM" onclick="addOpenPopupInv() + setAttrib() + setDatalist()">ADD NEW ITEM</button>
                    <button class="expo-btn" title="EXPORT REPORT" onclick="expoOpenPopup() + exportToPdf()">*@

                    <button class="add-btn" title="ADD NEW ITEM" onclick="addOpenPopupInv()">ADD NEW ITEM</button>
                    <button class="expo-btn" title="EXPORT REPORT" onclick="expoOpenPopup()">
                        <a>
                            EXPORT
                            <span class="las la-file-download"></span>
                        </a>
                    </button>

                    <select required>
                        <option disabled selected>FILTER</option>
                        <option>Standard</option>
                        <option>Average</option>
                        <option>Re-order</option>
                    </select>
                </div>
            </div>

            <!--
        <div class="add-popup-inv" id="add-popup-inv">
        <div class="inventory-add-container">-->
            @*Barcode Container*@

                    <!--<div class="inventory-form-container">
    <form action="@Url.Action("AddItem1", "Admin")" id="addForm" method="post">
        <div class="details personal">
            <div class="inventory-form-header">
                ITEM DETAILS
                <div class="inventory-buttons-style">
                    <button class="add-btn" id="addnewitem" title="ADD NEW ITEM" "><a>Add Item</a></button>
                </div>
            </div>
            <div class="img-wrapper" id="image-container" style="display:none">-->
                    @*<img id="imgContainer" alt="barcode">*@
                    <!--</div>
    <input type="text" id="formType" name="formType" style="display:none" required>
    <div class="inventory-form-contents">
        <div class="fields">
            <div class="input-field">
                <label>Item Code</label>-->
                    @*oninput="dataListOption(this.value)"*@
                    <!--<input type="text" id="itemCode" list="itemList" name="in_code" placeholder="ABC-DEF-GHI" required>
        <datalist id="itemList">
        </datalist>
    </div>

    <div class="input-field">
        <label>Item Name</label>
        <input type="text" placeholder="Item Name" name="in_name" id="itemName" readonly required>
    </div>

    <div class="input-field">
        <label>Category</label>
        <select id="cat-select" readonly required>
            <option disabled selected value="">Select Category</option>
            <option value="Fittings">Fittings</option>
            <option value="Gate Valves">Gate Valves</option>
            <option value="Power Tools">Power Tools</option>
            <option value="Fire Extinguisher">Fire Extinguisher</option>
            <option value="Scaffolding">Scaffolding</option>
            <option value="Others">Others</option>
        </select>
        <input type="text" id="hiddenCategory" name="in_category" style="display:none">
    </div>

    <div class="input-field">
        <label>Class</label>
        <select id="class-select" readonly required>
            <option disabled selected value="">Select Category</option>
            <option>Local</option>
            <option>Imported</option>
        </select>
        <input type="text" id="hiddenCategory" name="in_category" style="display:none">
    </div>

    <div class="input-field">
        <label>Type</label>
        <select id="type-select" readonly>
            <option disabled selected>Select Type</option>
            <option value="HFC-236 F">HFC-236 F</option>
            <option value="Machine">Machine</option>
        </select>
        <input type="text" id="hiddenType" name="in_type" style="display:none">
    </div>

    <div class="input-field">
        <label>Size</label>
        <div class="input-field-size">
            <input type="number" placeholder="00000" id="itemSize" readonly>
            <select readonly id="itemSizeMeas">
                <option disabled selected>Measurement</option>
                <option>INCH</option>
                <option>CM</option>
            </select>
            <input type="text" id="hiddenSize" name="in_size" style="display:none">
        </div>
    </div>
    <div class="input-field">
        <label>Quantity</label>
        <div class="input-field-quantity">-->
                    @*onchange="AddValue(this.options[this.selectedIndex].value,'edit'*@
                    <!--<input type="number" placeholder="00000" id="itemQuant" required>
                                        <select readonly id="itemQuantMeas" required>
                                            <option disabled selected value="">Measurement</option>
                                            <option value="PCS">PCS</option>
                                            <option value="SET">SET</option>
                                        </select>
                                        <input type="text" id="hiddenQuant" name="in_quantity" style="display:none" required>
                                        <br /><br /><br /><label id="itemQuantMeas-error" class="error manual-error" for="itemQuantMeas"></label>
                                    </div>
                                </div>
                                <div class="input-field">
                                </div>
                            </div>
                        </div>
                    </div>
                    <center>
                        <div class="form-add-btns">
                            <button class="save" id="saveBtn" onclick="checkForm() + setQuantity()">
                                <span class="btnText">Save</span>
                                <i class="las la-check-square"></i>
                            </button>

                            <button class="cancel">
                                <span class="btnText" id="cancelBtn" onclick="addClosePopupInv() + resetForm(0)">Cancel</span>
                                <i class="las la-window-close"></i>
                            </button>
                        </div>
                    </center>
                </form>
            </div>
        </div>
    </div>
    -->


                    <div class="add-popup-inv" id="add-popup-inv">
                        <div class="inventory-add-container">


                            <!-- Inventory Add -->

                            <div class="inventory-form-container">
                                <form action="">
                                    <div class="details-personal">
                                        <div class="inventory-form-header">
                                            ADD ITEM QUANTITY

                                        </div>
                                        <div class="inventory-form-contents">
                                            <div class="fields">
                                                <div class="input-field">
                                                    <label>Item ID</label>
                                                    <input type="number" placeholder="00000" readonly>
                                                </div>

                                                <div class="input-field">
                                                    <label>Item Name</label>
                                                    <input type="text" placeholder="Enter item name" required>
                                                </div>

                                                <div class="input-field">
                                                    <label>Category</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Class</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Type</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Size</label>
                                                    <div class="input-field-size">
                                                        <input type="number" placeholder="00000" required>
                                                        <select required>
                                                            <option disabled selected>Measurement</option>
                                                            <option>cm</option>
                                                            <option>inch</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="input-field">
                                                    <label>Quantity</label>
                                                    <div class="input-field-quantity">
                                                        <input type="number" placeholder="00000" required>
                                                        <select required>
                                                            <option disabled selected>Measurement</option>
                                                            <option>cm</option>
                                                            <option>inch</option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="input-field">
                                                    <label>Date Added</label>
                                                    <input type="text" placeholder="00/00/00" readonly>
                                                </div>
                                                <div class="input-field">
                                                    <div class="img-bar-grp">
                                                        <img src="../../../images/barcode.png" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-add-btns">
                                        <button class="save" onclick="infoOpenPopup()">
                                            <span class="btnText">Save</span>
                                            <i class="las la-check-square"></i>
                                        </button>

                                        <button class="cancel">
                                            <span class="btnText" onclick="canOpenPopup()">Cancel</span>
                                            <i class="las la-window-close"></i>
                                        </button>
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="add-qty-popup-inv" id="add-qty-popup-inv">
                        <div class="inventory-add-container">


                            <!-- Inventory Add Quantity -->

                            <div class="inventory-form-container">
                                <form action="">
                                    <div class="details-personal">
                                        <div class="inventory-form-header">
                                            ADD NEW ITEM

                                        </div>
                                        <div class="inventory-form-contents">
                                            <div class="fields">
                                                <div class="input-field">
                                                    <label>Item ID</label>
                                                    <input type="number" placeholder="00000" readonly>
                                                </div>

                                                <div class="input-field">
                                                    <label>Item Name</label>
                                                    <input type="text" placeholder="Enter item name" required>
                                                </div>

                                                <div class="input-field">
                                                    <label>Category</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Class</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Type</label>
                                                    <select required>
                                                        <option disabled selected>Select Category</option>
                                                        <option>...</option>
                                                        <option>..</option>
                                                    </select>
                                                </div>

                                                <div class="input-field">
                                                    <label>Size</label>
                                                    <div class="input-field-size">
                                                        <input type="number" placeholder="00000" required>
                                                        <select required>
                                                            <option disabled selected>Measurement</option>
                                                            <option>cm</option>
                                                            <option>inch</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="input-field">
                                                    <label>Quantity</label>
                                                    <div class="input-field-quantity">
                                                        <input type="number" placeholder="00000" required>
                                                        <select required>
                                                            <option disabled selected>Measurement</option>
                                                            <option>cm</option>
                                                            <option>inch</option>
                                                        </select>
                                                    </div>
                                                </div>

                                                <div class="input-field">
                                                    <label>Date Added</label>
                                                    <input type="text" placeholder="00/00/00" readonly>
                                                </div>
                                                <div class="input-field">
                                                    <div class="img-bar-grp">
                                                        <img src="../../../images/barcode.png" alt="">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-add-btns">
                                        <button class="save" onclick="infoOpenPopup()">
                                            <span class="btnText">Save</span>
                                            <i class="las la-check-square"></i>
                                        </button>

                                        <button class="cancel">
                                            <span class="btnText" onclick="canOpenPopup()">Cancel</span>
                                            <i class="las la-window-close"></i>
                                        </button>
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>

                    <div class="inventory-projects" id="printable">
                        <div class="inventory">
                            <div class="inventory-body">
                                <div class="table-responsive printable" style="overflow-x: auto;">
                                    <table width="100%" id="myTable" class="myTable">
                                        <thead>
                                            <tr>
                                                <td><a>Code<i class="las la-sort-down"></i></a></td>
                                                <td><a>Name<i class="las la-sort-down"></i></a></td>
                                                <td>Category</td>
                                                <td>Type</td>
                                                <td>Size</td>
                                                <td>Quantity</td>
                                                <td>Remarks</td>
                                                <td><a>Class<i class="las la-sort-down"></i></a></td>
                                                <td id="hideAction">Action</td>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

        <div class="info-pop-container" id="info-popup">
            <img src="@Url.Content("~/images/information.png")">
            <h2>System Warning!</h2>
            <p>Do you want to save the item on the list?</p>
            <button type="submit" form="addForm">Yes</button>
            <button type="button" onclick="infoClosePopup()">Cancel</button>
        </div>

        <div class="can-pop-container" id="can-popup">
            <img src="@Url.Content("~/images/warning.png")">
            <h2>System Warning!</h2>
            <p>Are you sure you want to delete item on the list?</p>
            <button type="button" onclick="DeleteItem()">Yes</button>
            <button type="button" onclick="canClosePopup()">Cancel</button>
        </div>

        <div class="rem-pop-container" id="rem-popup">
            <img src="@Url.Content("~/images/remove.png")">
            <h2>Deleted!</h2>
            <p>Item details has deleted in the list!</p>
            <button type="button" onclick="remClosePopup()">OK</button>
        </div>

        <div class="save-pop-container" id="popup">
            <img src="@Url.Content("~/images/tick.png")">
            <h2>Saved!</h2>
            <p>Item has saved successfully!</p>
            <button type="button" onclick="closePopup()">OK</button>
        </div>
        <div class="print-pop-container" id="print-popup">
            <img src="@Url.Content("~/images/printer.png")">
            <h2>Print!</h2>
            <p>Print successfully!</p>
            <button type="button" onclick="printClosePopup()">OK</button>
        </div>

        <div class="expo-pop-container" id="expo-popup">
            <img src="@Url.Content("~/images/export.png")">
            <h2>Export!</h2>
            <p>Exported Successfully!</p>
            <button type="button" onclick="expoClosePopup()">OK</button>
        </div>

    </main>
</div>
<script src="@Url.Content("~/Scripts/Inventory.js")"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
<script>
    
    /* TESTING POPUP*/


    let addpopupinv = document.getElementById("add-popup-inv");
    function addOpenPopupInv() {
        addpopupinv.classList.add("add-popup-inv-show")
    }

    function addClosePopupInv() {
        addpopupinv.classList.remove("add-popup-inv-show")
    }

    let addqtypopupinv = document.getElementById("add-qty-popup-inv");
    function addqtyOpenPopupInv() {
        addqtypopupinv.classList.add("add-qty-popup-inv-show")
    }

    function addqtyClosePopupInv() {
        addqtypopupinv.classList.remove("add-qty-popup-inv-show")
    }

    function checkForm() {
        var bool = $('#addForm').valid();
        if (bool) {
            infoOpenPopup();
        }
    }

    function exportToPdf() {
        const element = document.querySelector('#myTable');
        storeOriginalTableHtml()
        var columnToRemove = 7; // Replace with the index of the column you want to remove (starting from 0)
        var rows = element.getElementsByTagName("tr");

        for (var i = 0; i < rows.length; i++) {
            rows[i].getElementsByTagName("td")[columnToRemove].style.display = "none";
        }
        const options = {
            margin: [0, 0, 0, 0],
            filename: 'inventory-list.pdf',
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { scale: 2 },
            jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' },
        };
        html2pdf().set(options).from(element).save();
        resetTable();
    }

        /* When the user clicks on the button,
        toggle between hiding and showing the dropdown content */
        let form = document.getElementById("addForm");
        let cat = document.getElementById("cat-select");
        let type = document.getElementById("type-select");
        let name = document.querySelector('#itemName');
        let itemQuantMeas = document.querySelector('#itemQuantMeas');
        let sizeMeas = document.querySelector('#itemSizeMeas');
        let size = document.querySelector('#itemSize');
        let quantity = document.querySelector('#itemQuant');
        let code = document.getElementById("itemCode");
        let hidCategory = document.getElementById("hiddenCategory");
        let hidType = document.getElementById("hiddenType");
        let itemClass = document.getElementById("itemClass");
        let addnewitem = document.getElementById("addnewitem");
        let imgContainer = document.getElementById("image-container");
        let newNum = "";
        let sliced = "";
        let prevVal = "";

        addnewitem.addEventListener("click", addNewItem);
    size.addEventListener("keyup", setHiddenSize);
    sizeMeas.addEventListener("change", setHiddenSize1);

        function addNewItem() {
            let formType = document.getElementById("formType");
            formType.value = "add";
            size.removeEventListener("keyup", setHiddenSize);
            code.removeEventListener("input", processInput);
            form.removeEventListener("keydown",Scan);
            quantity.removeEventListener("keyup", insertAdd);
            quantity.removeEventListener("keyup", insertEdit);

            //code.removeAttribute("readonly");

            //code.addEventListener("keyup", NewCodeListener);
            quantity.addEventListener("keyup", setQuantity);
            size.addEventListener("keyup", setSize);
            code.setAttribute("readonly", true);
            removeAttrib();
        }

        function setSize() {
            let hiddenSize = document.getElementById("hiddenSize");

            hiddenSize.value = size.value + " " + sizeMeas.options[sizeMeas.selectedIndex].value;
            console.log(hiddenSize.value);
        }

        function NewCodeListener() {
            let itemCode = code.value;

            if (itemCode == null || itemCode == "") {
                imgContainer.style.display = "none";
            }
            else {
                GetBarcode(itemCode);
                imgContainer.style.display = "block";
            }
        }

        cat.addEventListener("change", function () {
            var optionValue = this.options[this.selectedIndex].value;
            hidCategory.value = optionValue;
            AddValue(0, 'edit');
            setHiddenSize();
            console.log(hidCategory.value);
        });

        type.addEventListener("change", function () {
            var optionValue = this.options[this.selectedIndex].value;
            hidType.value = optionValue;
            AddValue(0, 'edit');
            setHiddenSize();
            console.log(hidType.value);
        });

        function insertAdd() {
            AddValue(quantity.value, 'add');
        }

        function insertEdit() {
            AddValue(quantity.value,'edit');
        }

        function resetForm(skip) {
            for (let i = Number(skip); i < form.elements.length; i++) {
                form.elements[i].value = "";
            }
            cat.selectedIndex = 0;
            type.selectedIndex = 0;
        }

        window.onload = function () {
            let removed = localStorage.getItem("removed");

            let edit = '@Session["edit"].ToString()';

            if (edit != "pending") {
                popup.classList.add("open-popup-show");
                @{
                    Session["edit"] = null;
                }
            }

            if (removed != null) {
                rempopup.classList.add("rem-popup-show");
            }
            localStorage.clear();
            GetAll();
        }

        function setAttrib() {
            name.setAttribute("readonly", true);
            size.setAttribute("readonly", true);
            itemQuantMeas.setAttribute("readonly", true);
            sizeMeas.setAttribute("readonly", true);
            cat.setAttribute("readonly", true);
            type.setAttribute("readonly", true);
            cat.setAttribute("disabled", true);
            type.setAttribute("disabled", true);
            itemQuantMeas.setAttribute("disabled", true);
            sizeMeas.setAttribute("disabled", true);
            addnewitem.style.display = "block";
            //quantity.setAttribute("type","number")
    }

    function Scan(event) {
        // if (code.value == "") {
        //    resetForm(0);
        //}
        if (event.which === 13 || event.keyCode === 13) {
            event.preventDefault();
            // retrieve the scanned value
            if (sliced.length == 0) {
                sliced = code.value;
            }

            if (code.value.length != prevVal.length) {
                if (prevVal.length != 0) {
                    var index = 0;
                    while (index <= prevVal.length) {
                        index++;
                    }
                    sliced = code.value.slice(index - 1);
                }
            }
                @{
                    Session["add"] = "active";
                }

            if (sliced.length != 0) {
                code.value = sliced;
            }
            setField(code.value, 'quant');
            AddValue(quantity.value, 'add');
            let prevNum = quantity.value;
            if (quantity.value == "" && prevNum == "" || code.value !== prevVal) {
                quantity.value = 1;
            }
            else if (code.value === prevVal && prevVal != "" && sliced != "") {
                quantity.value = Number(prevNum) + 1;
            }
            prevVal = sliced;
        }
            //validateCode();
    }

    form.addEventListener("keydown", Scan);
    code.addEventListener("input", processInput);

    function processInput(event) {
        if (event.which !== 13 || event.keyCode !== 13) {
            setField(code.value, 'quant');
            AddValue(quantity.value, 'add');
            if (quantity.value == "") {
                quantity.value = 1;
            }
        }
            //validateCode();
    }

        function EditListener() {
            quantity.removeEventListener("keyup", insertAdd);
            quantity.addEventListener("keyup", insertEdit);
        }

        function AddListener() {
            quantity.removeEventListener("keyup", insertEdit);
            quantity.addEventListener("keyup", insertAdd);
            code.removeAttribute("readonly");
        }

        function removeAttrib() {
            name.removeAttribute("readonly");
            size.removeAttribute("readonly");
            sizeMeas.removeAttribute("readonly");
            quantity.removeAttribute("readonly");
            itemQuantMeas.removeAttribute("readonly");
            cat.removeAttribute("readonly");
            type.removeAttribute("readonly");
            cat.removeAttribute("disabled");
            itemQuantMeas.removeAttribute("disabled");
            sizeMeas.removeAttribute("disabled");
            type.removeAttribute("disabled");
        }

        function openEdit(value) {
            addpopupinv.classList.add("add-popup-inv-show");
            code.setAttribute("readonly", true);
            removeAttrib();
            setField(value,null);
            code.value = value;
            addnewitem.style.display = "none";
            AddValue(value, 'edit');
            EditListener();
        }

        document.getElementById("saveBtn").addEventListener("click", function () {
            event.preventDefault();
        });

        document.getElementById("addnewitem").addEventListener("click", function () {
            event.preventDefault();
        });

        document.getElementById("cancelBtn").addEventListener("click", function () {
            event.preventDefault();
        });
    /* START OF PRINT */
        var originalTableHtml;
        document.getElementById("printBtn").addEventListener("click", function () {
            storeOriginalTableHtml()
            var table = document.getElementById("printable");
            var columnToRemove = 7; // Replace with the index of the column you want to remove (starting from 0)
            var rows = table.getElementsByTagName("tr");

            for (var i = 0; i < rows.length; i++) {
                rows[i].getElementsByTagName("td")[columnToRemove].style.display = "none";
            }
            var printResult = window.print();
            if (!printResult) {
                resetTable();
            }
        });
        function storeOriginalTableHtml() {
            var table = document.getElementById("printable");
            originalTableHtml = table.innerHTML;
        }

        function resetTable() {
            var table = document.getElementById("printable");
            table.innerHTML = originalTableHtml;
        }
    /* END OF PRINT */
        function myFunction() {
            document.getElementById("myDropdown").classList.toggle("show");
        }

        //function exportTable() {
        //    exportArrayToCsv();
        //}

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (e) {
            if (!e.target.matches('.drop-btn')) {
                var myDropdown = document.getElementById("myDropdown");
                if (myDropdown.classList.contains('show')) {
                    myDropdown.classList.remove('show');

                }
            }
        }

        function userSortFunction() {
            document.getElementById("invSortDropdown").classList.toggle("inventory-sort-show");
        }

        let archpopup = document.getElementById("arch-popup");
        function OpenArchPopup() {
            archpopup.classList.add("arch-popup-show")
        }

        function CloseArchPopup() {
            archpopup.classList.remove("arch-popup-show")
        }

        // Close the dropdown if the user clicks outside of it
        window.onclick = function (e) {
            if (!e.target.matches('.inventory-sort-btn')) {
                var myDropdown = document.getElementById("invSortDropdown");
                if (myDropdown.classList.contains('inventory-sort-show')) {
                    myDropdown.classList.remove('inventory-sort-show');
                }
            }
        }
            //Messege Box
        let popup = document.getElementById("popup");
        function openPopup() {
            popup.classList.add("open-popup-show")
        }

        function closePopup() {
            popup.classList.remove("open-popup-show")
        }
        let infopopup = document.getElementById("info-popup");

        function infoOpenPopup() {
            infopopup.classList.add("info-popup-show")
        }

        function infoClosePopup() {
            infopopup.classList.remove("info-popup-show")
        }

        let addpopupinv = document.getElementById("add-popup-inv");
        function addOpenPopupInv() {
            addpopupinv.classList.add("add-popup-inv-show")
            AddListener();
        }

        function addClosePopupInv() {
            addpopupinv.classList.remove("add-popup-inv-show")
        }

        let canpopup = document.getElementById("can-popup");

        function canOpenPopup(value) {
            canpopup.classList.add("can-popup-show");
            localStorage.setItem("codeToDelete", value);
        }

        function canClosePopup() {
            canpopup.classList.remove("can-popup-show")
        }

        let rempopup = document.getElementById("rem-popup");

        function remOpenPopup() {
            rempopup.classList.add("rem-popup-show")
        }

        function remClosePopup() {
            rempopup.classList.remove("rem-popup-show")
        }

        let printpopup = document.getElementById("print-popup");

        function printOpenPopup() {
            printpopup.classList.add("print-popup-show")
        }

        function printClosePopup() {
            printpopup.classList.remove("print-popup-show")
        }

        let expopopup = document.getElementById("expo-popup");

        function expoOpenPopup() {
            expopopup.classList.add("expo-popup-show")
        }

        function expoClosePopup() {
            expopopup.classList.remove("expo-popup-show")
        }

</script>
